/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Vista;

import Model.*;
import Vista.loginApp;
import Model.comprueba;
import Vista.*;
import java.awt.Color;
import java.awt.Component;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;

/**
 * La clase `NuevoProductoManager` proporciona métodos para verificar y procesar la creación de un nuevo producto.
 * 
 * Esta clase depende de la clase `producto` para representar el producto que se está creando y de la clase `conectar` para realizar operaciones en la base de datos.
 * 
 * @author mmarc
 */

public class nuevoProducto extends javax.swing.JDialog {

    /**
     * Creates new form nuevoProducto
     * @param parent
     * @param modal
     */
    public nuevoProducto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NomText = new javax.swing.JTextField();
        precioText = new javax.swing.JTextField();
        cantidadText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        añadirBoton = new javax.swing.JButton();
        comboIdTalla = new javax.swing.JComboBox<>();
        comboIdModelo = new javax.swing.JComboBox<>();
        comboIdTipo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(680, 280));
        setPreferredSize(new java.awt.Dimension(646, 280));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NomText.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        getContentPane().add(NomText, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 76, 30));

        precioText.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        getContentPane().add(precioText, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 86, 30));

        cantidadText.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        cantidadText.setActionCommand("<Not Set>");
        cantidadText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadTextActionPerformed(evt);
            }
        });
        getContentPane().add(cantidadText, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 86, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        jLabel1.setText("Nomenclatura");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        jLabel2.setText("Tipo");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        jLabel3.setText("Modelo");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 41, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        jLabel4.setText("Talla");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        jLabel5.setText("Precio");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 41, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        jLabel6.setText("Cantidad");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, -1, -1));

        añadirBoton.setBackground(new java.awt.Color(102, 102, 255));
        añadirBoton.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        añadirBoton.setForeground(new java.awt.Color(255, 255, 255));
        añadirBoton.setText("Añadir");
        añadirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirBotonActionPerformed(evt);
            }
        });
        getContentPane().add(añadirBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 175, -1));

        comboIdTalla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "s", "m", "l", "xl", "xxl", "T.Uni" }));
        getContentPane().add(comboIdTalla, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, -1, -1));

        comboIdModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "01", "02", "03", "04", "05" }));
        getContentPane().add(comboIdModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, -1, -1));

        comboIdTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "Camiseta", "Taza", "Chapa", "Pin", "Pendrive" }));
        getContentPane().add(comboIdTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cantidadTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadTextActionPerformed

    private void añadirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirBotonActionPerformed
        // TODO add your handling code here:
        
        comprobando();
        try {
            nuevo();
        } catch (SQLException ex) {
            Logger.getLogger(nuevoProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpiar();
        this.dispose();
        
    }//GEN-LAST:event_añadirBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(nuevoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(nuevoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(nuevoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(nuevoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                nuevoProducto dialog = new nuevoProducto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NomText;
    private javax.swing.JButton añadirBoton;
    private javax.swing.JTextField cantidadText;
    private javax.swing.JComboBox<String> comboIdModelo;
    private javax.swing.JComboBox<String> comboIdTalla;
    private javax.swing.JComboBox<String> comboIdTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField precioText;
    // End of variables declaration//GEN-END:variables
    /** La nomenclatura del nuevo producto. */
    String nomenclatura;
    
    /** El ID del tipo de producto. */
    int idTipo;
    
    /** El ID del modelo del producto. */
    int idModelo;
    
    /** El ID de la talla del producto. */
    int idTalla;
    
    /** El precio del nuevo producto. */
    Float precio;
    
    /** La cantidad disponible del nuevo producto. */
    int cantidad;
    
    /** El tipo del nuevo producto. */
    String tipo;
    
    /** El modelo del nuevo producto. */
    String modelo;
    
    /** La talla del nuevo producto. */
    String talla;
    
    /** La cantidad introducida como texto. */
    String cant;
    
    /** El precio introducido como texto. */
    String prize;
    
    /** El ID del usuario. */
    String idUsuario;

    /**
     * Verifica si todos los campos necesarios están completos antes de crear un nuevo producto.
     */
    public void comprobando() {
        if (NomText.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "El campo no puede quedar vacío");
        } else if (comboIdTipo.getSelectedItem().equals("Selecciona")) {
            JOptionPane.showMessageDialog(this, "Tienes que seleccionar algo");
        } else if (comboIdModelo.getSelectedItem().equals("Selecciona")) {
            JOptionPane.showMessageDialog(this, "Tienes que seleccionar algo");
        } else if (comboIdTalla.getSelectedItem().equals("Selecciona")) {
            JOptionPane.showMessageDialog(this, "Tienes que seleccionar algo");
        } else if (precioText.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "El campo no puede quedar vacío");
        } else if (cantidadText.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "El campo no puede quedar vacío");
        }
    }

    /**
     * Crea un nuevo producto con los datos proporcionados.
     * 
     * @throws SQLException Si ocurre un error al acceder a la base de datos.
     */
    public void nuevo() throws SQLException {
        producto pr = new producto(nomenclatura, idModelo, idTalla, idTipo, cantidad, precio);
        pr.setNomenclatura(NomText.getText());
        Nomenclatura.nomenclatura = NomText.getText();
        tipo = comboIdTipo.getSelectedItem().toString();
        if (tipo.equals("Selecciona")) {
            JOptionPane.showMessageDialog(this, "No puedes dejar sin seleccionar el tipo del producto");
        } else if (tipo.equals("Camiseta")) {
            pr.setIdTipo(1);
        } else if (tipo.equals("Taza")) {
            pr.setIdTipo(2);
        } else if (tipo.equals("Chapa")) {
            pr.setIdTipo(3);
        } else if (tipo.equals("Pin")) {
            pr.setIdTipo(4);
        } else if (tipo.equals("Pendrive")) {
            pr.setIdTipo(5);
        }
        modelo = comboIdModelo.getSelectedItem().toString();
        if (modelo.equals("Selecciona")) {
            JOptionPane.showMessageDialog(this, "No puedes dejar sin seleccionar el modelo del producto");
        } else if (modelo.equals("01")) {
            pr.setIdModelo(1);
        } else if (modelo.equals("02")) {
            pr.setIdModelo(2);
        } else if (modelo.equals("03")) {
            pr.setIdModelo(3);
        } else if (modelo.equals("04")) {
            pr.setIdModelo(3);
        } else if (modelo.equals("05")) {
            pr.setIdModelo(5);
        }
        talla = comboIdTalla.getSelectedItem().toString();
        if (talla.equals("Selecciona")) {
            JOptionPane.showMessageDialog(this, "No puedes dejar sin seleccionar la talla del producto");
        } else if (talla.equals("s")) {
            pr.setIdTalla(1);
        } else if (talla.equals("m")) {
            pr.setIdTalla(2);
        } else if (talla.equals("l")) {
            pr.setIdTalla(3);
        } else if (talla.equals("xl")) {
            pr.setIdTalla(4);
        } else if (talla.equals("xxl")) {
            pr.setIdTalla(5);
        } else if (talla.equals("T.Uni")) {
            pr.setIdTalla(6);
        }
        prize = precioText.getText();
        pr.setPrecio(Float.valueOf(prize));
        cant = cantidadText.getText();
        pr.setCantidad(Integer.parseInt(cant));

        conectar.conecta();
        conectar.añadirProductoNuevo(pr);
      
        

        conectar.cerrarConexion();
        this.dispose();
    }

    /**
     * Limpia los campos de entrada de texto.
     */
    public void limpiar() {
        NomText.setText("");
        precioText.setText("");
        cantidadText.setText("");
    }
}